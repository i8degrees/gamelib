/******************************************************************************

nomlib - C++11 cross-platform game engine

Copyright (c) 2013, Jeffrey Carpenter <jeffrey.carp@gmail.com>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

******************************************************************************/

/// This file is auto-generated by CMake at build time
#include <string>

/// Track version info
#define NOMLIB_VERSION_MAJOR 0
#define NOMLIB_VERSION_MINOR 9
#define NOMLIB_VERSION_PATCH 0

/// Platform processing architecture; we can safely assume (for now, anyway!)
/// that if we are not running on a 64-bit arch, that we are on a 32-bit arch.
/* #undef PLATFORM_ARCH_64_BIT */

/// Used in determining strategy to use for obtaining Resources path
//#define FRAMEWORK

/// FIXME
/// We must figure out how to either: 
/// a) continue auto-generating this file;
/// b) Fix our CMakeLists.txt for Windows VC++ project files;
/// c) devise another solution for nomlib's install prefix constant.
///
/// I am hoping / planning on option B.
///
/// Jeffrey Carpenter <jeffrey.carp@gmail.com> @ 2013-10-01
extern const std::string NOMLIB_INSTALL_PREFIX;

/// Library ID used in a OS X Framework bundle.
extern const std::string NOMLIB_BUNDLE_IDENTIFIER;
