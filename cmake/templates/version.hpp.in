/******************************************************************************

  nomlib - C++11 cross-platform game engine

Copyright (c) 2013, 2014 Jeffrey Carpenter <i8degrees@gmail.com>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

******************************************************************************/

// This file is auto-generated by CMake at build time;
// See also: CMakeLists.txt.

#include <string>
#include <sstream>

#include "nomlib/revision.hpp"

// \brief Track version info from project's CMake build script
#define NOMLIB_VERSION_MAJOR @PROJECT_VERSION_MAJOR@
#define NOMLIB_VERSION_MINOR @PROJECT_VERSION_MINOR@
#define NOMLIB_VERSION_PATCH @PROJECT_VERSION_PATCH@

/// \brief Get the full version release number of nomlib
///
/// \returns A C++ std::string with the version string filled in.
///
/// \remarks Sample output: "1.2.3" (excluding double quotes).
///
/// \see nom::major_version, nom::minor_version and nom::patch_version for
/// creating your own custom version strings.
#define NOM_VERSION \
  { version(); }

/// \brief Get a source repository revision number of nomlib
///
/// \returns A C++ std::string with the git tag & revision number string filled
/// in.
///
/// \remarks Sample output: "v0.10.0-688-geaccfff" (excluding double quotes).
///
/// \see https://github.com/i8degrees/nomlib
#define NOM_REVISION \
  { revision(); }

namespace nom {

/// \brief Get the full version string for nomlib.
///
/// \returns A std::string containing the major, minor and patch version numbers
/// of nomlib.
std::string version( void );

/// \brief Get the git revision build of nomlib.
///
/// \returns A std::string containing the git tag followed by the commit number.
///
/// \note The output of `git describe --tags` is used.
std::string revision( void );

/// \brief Get the major version of nomlib.
///
/// \returns An integer containing the major version of nomlib.
int major_version( void );

/// \brief Get the minor version of nomlib.
///
/// \returns An integer containing the minor version of nomlib.
int minor_version( void );

/// \brief Get the patch version of nomlib.
///
/// \returns An integer containing the minor version of nomlib.
int patch_version( void );

} // namespace nom
